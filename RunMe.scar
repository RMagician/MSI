{==============================================================================\
|                         MSI Group Scripting Include                          |
|                                 RunMe.scar                                   |
|==============================================================================|
| For the script User to just simply press play                                |
|                                                                              |
|==============================================================================|
|                         ** Setup Instructions **                             |
|==============================================================================|
|                                                                              |
| -> Valid arguments for PlayerSkills[i]:                                      |
|    - [SKILL_WOODCUTTING]                                                     |
|                                                                              |
| -> Valid arguments for PlayerObjects[i]:                                     |
|    - For banking:                                                            |
|      - [[OBJ_TREE_NORMAL]]                                                   |
|                                                                              |
|    - For power skilling (order doesn't matter and it can be in any           |
|      combination you wish:                                                   |
|      - [[OBJ_TREE_NORMAL, OBJ_TREE_OAK, OBJ_TREE_WILLOW, OBJ_TREE_MAPLE,     |
|          OBJ_TREE_YEW]]                                                      |
|                                                                              |
| -> Valid arguments for Integers[P_CITY]:                                     |
|    - if power skilling, any city is fine                                     |
|    - CITY_VARROCK                                                            |
|                                                                              |
| -> Valid arguments for Integers[P_LOC]:                                      |
|    - For banking:                                                            |
|      - LOC_VE_BANK                                                           |
|      - LOC_VE_TREES                                                          |
|                                                                              |
|    - For power skilling:                                                     |
|      - LOC_POWER_SKILL                                                       |
|                                                                              |
| -> Valid arguments for Booleans[P_BANK]:                                     |
|    - For banking:                                                            |
|      - True                                                                  |
|                                                                              |
|    - For power skilling:                                                     |
|      - False                                                                 |
 \_____________________________________________________________________________}

program MSIScript;
//{$DEFINE REFLECTION} // Comment out if you don't want to use reflection walking
{.include SRL/SRL/MSI/Setup.scar}

const
  BREAK_AFTER = 5;  // Loads to break after/switching players after
  BREAK_TIME  = 15; // How long to break for in minutes (for single player only, multiplayer will switch players)

  WORLD_SMART   = 152;
  WORLD_MEMBERS = False;
  
  STATS_ID = '';
  STATS_PASS = '';

procedure DeclarePlayers;
var
  i, j: Integer;
begin
  HowManyPlayers := 1;
  NumberOfPlayers(HowManyPlayers);
  CurrentPlayer := 0;
  CurrentSkill := 0;
  SetLength(ProgressReportArray, HowManyPlayers);
  SetLength(PlayerSkills, HowManyPlayers);
  SetLength(PlayerObjects, HowManyPlayers);

  with Players[0] do
  begin
    Name   := '';
    Pass   := '';
    Nick   := '';
    Active := True;
    Pin    := '';
    PlayerSkills[0]  := [SKILL_WOODCUTTING];
    PlayerObjects[0] := [[OBJ_TREE_NORMAL]];
    Integers[P_CITY] := CITY_VARROCK;
    Integers[P_LOC]  := LOC_VE_BANK;
    Booleans[P_BANK] := True;
  end;
{
  with Players[1] do
  begin
    Name   := '';
    Pass   := '';
    Nick   := '';
    Active := True;
    Pin    := '';
    PlayerSkills[1]  := [SKILL_WOODCUTTING];
    PlayerObjects[1] := [[OBJ_TREE_WILLOW]];
    Integers[P_CITY] := CITY_VARROCK;
    Integers[P_LOC]  := LOC_POWER_SKILL;
    Booleans[P_BANK] := False;
  end;

  with Players[2] do
  begin
    Name   := '';
    Pass   := '';
    Nick   := '';
    Active := True;
    Pin    := '';
    PlayerSkills[2]  := [SKILL_WOODCUTTING];
    PlayerObjects[2] := [[OBJ_TREE_WILLOW]];
    Integers[P_CITY] := CITY_VARROCK;
    Integers[P_LOC]  := LOC_POWER_SKILL;
    Booleans[P_BANK] := False;
  end;

  with Players[3] do
  begin
    Name   := '';
    Pass   := '';
    Nick   := '';
    Active := True;
    Pin    := '';
    PlayerSkills[3]  := [SKILL_WOODCUTTING];
    PlayerObjects[3] := [[OBJ_TREE_WILLOW]];
    Integers[P_CITY] := CITY_VARROCK;
    Integers[P_LOC]  := LOC_POWER_SKILL;
    Booleans[P_BANK] := False;
  end;

  with Players[4] do
  begin
    Name   := '';
    Pass   := '';
    Nick   := '';
    Active := True;
    Pin    := '';
    PlayerSkills[4]  := [SKILL_WOODCUTTING];
    PlayerObjects[4] := [[OBJ_TREE_WILLOW]];
    Integers[P_CITY] := CITY_VARROCK;
    Integers[P_LOC]  := LOC_POWER_SKILL;
    Booleans[P_BANK] := False;
  end;

  with Players[5] do
  begin
    Name   := '';
    Pass   := '';
    Nick   := '';
    Active := True;
    Pin    := '';
    PlayerSkills[5]  := [SKILL_WOODCUTTING];
    PlayerObjects[5] := [[OBJ_TREE_WILLOW]];
    Integers[P_CITY] := CITY_VARROCK;
    Integers[P_LOC]  := LOC_POWER_SKILL;
    Booleans[P_BANK] := False;
  end;

  with Players[6] do
  begin
    Name   := '';
    Pass   := '';
    Nick   := '';
    Active := True;
    Pin    := '';
    PlayerSkills[6]  := [SKILL_WOODCUTTING];
    PlayerObjects[6] := [[OBJ_TREE_WILLOW]];
    Integers[P_CITY] := CITY_VARROCK;
    Integers[P_LOC]  := LOC_POWER_SKILL;
    Booleans[P_BANK] := False;
  end;

  with Players[7] do
  begin
    Name   := '';
    Pass   := '';
    Nick   := '';
    Active := True;
    Pin    := '';
    PlayerSkills[7]  := [SKILL_WOODCUTTING];
    PlayerObjects[7] := [[OBJ_TREE_WILLOW]];
    Integers[P_CITY] := CITY_VARROCK;
    Integers[P_LOC]  := LOC_POWER_SKILL;
    Booleans[P_BANK] := False;
  end;
}
  for i := 0 to High(Players) do
    with Players[i] do
    begin
      BoxRewards := ['amp', 'mote', 'ostume', 'oins', 'unes', 're', 'ems'];

      if (not Active) then
        ProgressReportArray[i].FalseReason := 'User set to false';

      ProgressReportArray[i].PlayerName := Name;
      ProgressReportArray[i].PlayerStatus := Active;
      ProgressReportArray[i].PlayerCity := Integers[P_CITY];
      ProgressReportArray[i].PlayerLoc := Integers[P_LOC];

      SetLength(ProgressReportArray[i].SkillInfo, Length(PlayerSkills[i]));
      for j := 0 to High(PlayerSkills[i]) do
      begin
        SetLength(ProgressReportArray[i].SkillInfo[j].ObjQuants, Length(PlayerObjects[i][j]));
        ProgressReportArray[i].SkillInfo[j].TotalObj := Length(PlayerObjects[i][j]);
      end;
    end;
end;

begin
  Smart_Server := WORLD_SMART;
  Smart_Members := WORLD_MEMBERS;
  Smart_Signed := True;
  Smart_SuperDetail := False;

  SetupSRL;
  SetupMSI;

  BreakAfter := BREAK_AFTER;
  BreakTime := BREAK_TIME;
  StatsID := STATS_ID;
  StatsPass := STATS_PASS;

  DeclarePlayers;
  MSI_Mainloop;
end.
