{==============================================================================\
|                         MSI Group Scripting Include                          |
|                               Globals.scar                                   |
|==============================================================================|
| Used to store all necessary global types, consts and vars                    |
|                                                                              |
 \_____________________________________________________________________________}
  
{ Type TMSObject
  Description: To be used for finding on the MS. Stores all necessary
               information. }
Type
  TMSObject = Record
    X, Y             : Integer;
    Name             : String;
    UpText           : String;
    Option           : String;
    Exp              : Extended;
    Colors           : TIntegerArray;
    FindAllColors    : Boolean; // Result False if not ALL colors are found
    Tol              : Integer;
    Hue              : Extended;
    Sat              : Extended;
    W, H             : Integer;
    Accuracy         : Integer; // Min pixels to be found
    ExcludeSelf      : Boolean; // Exclude pixels in a box, the box might need revamping / making it dynamic
    RightClickOnly   : Boolean;
    Tries            : Integer;
    Anim             : Boolean; // Result False if not animating
    WaitToMove       : Boolean; // When ClickLeft, wait till we have stopped moving?
    BadColors        : TIntegerArray;
    BadColorTolerance: Integer;
  End;
  TMSObjectArray = Array of TMSObject;
  
{ Type TItem
  Description: To be used for handling Items in all situations. }
  TItem = Record
    Name      : String;
    UpText    : TStringArray;
    ItemP     : TPoint;
    Stackable : Boolean;
    Colors    : TIntegerArray;
    Tol       : Integer;
    DTM       : Integer;
    BMP       : Integer;
  End;
  {Used in Banking.Scar}
  Type MSI_TItemArray = Array Of TItem;

{ Type TWalk
  Description: Stores all needed tilewalking information. }
  TWalk = Record
    City  : integer;
    Loc   : integer;
    Path  : TPointArray;
  End;

{ Type TMMLocation
  Description: Stores all needed colorwalking information. }
  TMMLocation = Record
    Symbol     : String;
    DTM        : Integer;
    W, H       : Integer;
    Colors     : TIntegerArray;
    Tolerances : TIntegerArray;
    Counts     : TIntegerArray;
  End;

{ Type TPlayerSkillInfo
  Description: Stores information for one player for one skill. }
  TPlayerSkillInfo = record
    TotalObj   : integer;
    TotalLoads : integer;
    Level      : integer;
    TotalEXP   : integer;
    ObjQuants  : array of integer;
  end;

{ Type TProggy
  Description: Stores information all progress related information for one
               player.  }
  TProggy = record
    PlayerName  : string;
    PlayerStatus: boolean;
    FalseReason : string;
    PlayerRandom: string;
    PlayerCity  : integer;
    PlayerLoc   : integer;
    SkillInfo   : array of TPlayerSkillInfo;
  end;

var
  ProgressReportArray: Array of TProggy;
  { Description: To be used to store information for Players individually }
  
  CurrentSkill: Integer;
  { Used like CurrentPlayer, but for the skills in the player array }
  
  CurrentLocation: TWalk;
  { Used for reflection walking }
  
  Debug_LevelToDebug: integer;
  { Description: For script user to choose how much to debug. }
  
  PlayerSkills: Array of TVariantArray;
  PlayerObjects: Array of Array of TVariantArray;
  { Used in the DeclarePlayers arrays for skills and objects }
  
  BreakAfter, BreakTime: Integer;
  { Used for script setup (assinged to constatns in RunMe.scar) }

{ Debug constants
  Description: The several debugging levels, so the user receives as much
               detail as he wishes to receive. }
const
  DEBUG_FORCE          = 10;  // For MSI SLs to force it to be debuged, not for Script Users!
  DEBUG_PROGGIE        = 7;   // Only debug proggie and more important things
  DEBUG_PLAYER_ACTIONS = 5;   // Only debug proggie, Player Actions and more important things
  DEBUG_FUNCTIONS      = 3;   // Debug the at the start of each function, Player Actions, Proggie and +
  DEBUG_SMALL_DETAILS  = 1;   // Debug small details and more important
  DEBUG_EVERYTHING     = 0;   // For Script Users to have everything in debug box.

  
{ const Players
  Constants representing the different Players array records. }
const
  // Integers
  P_LOC  = 0;
  P_CITY = 1;

  // Booleans
  P_BANK = 0;
  
{ const Location Constants
  Description: Constants used to represent player locations }
const
  LOC_LOST      = 0;
  LOC_VE_TREES  = 1;
  LOC_VE_BANK   = 2;
  LOC_IN_RANDOM = 3;
  
  CITY_VARROCK = 4;
  
{ const Hatchet/Pickaze requirements.
  Constants representing the requirements to use each pickaxe/hatchet. }
const
  REQ_BRONZE    = 1;
  REQ_IRON      = 1;
  REQ_STEEL     = 6;
  REQ_MITHRIL   = 21;
  REQ_ADAMANT   = 31;
  REQ_RUNE      = 41;
  REQ_MAX_LEVEL = 99;

{ const Item Info
  Description: Constants representing all the items used in MSI. }
const
  CAVADA_BERRIES = 0; //Test

  PICKAXE_BRONZE  = 1;    //Pickaxe for mining
  PICKAXE_IRON    = 2;
  PICKAXE_STEEL   = 3;
  PICKAXE_MITHRIL = 4;
  PICKAXE_ADAMANT = 5;
  PICKAXE_RUNE    = 6;

  HATCHET_BRONZE  = 7;   //Hatchets for wood cutting :D
  HATCHET_IRON    = 8;
  HATCHET_STEEL   = 9;
  HATCHET_MITHRIL = 10;
  HATCHET_ADAMANT = 11;
  HATCHET_RUNE    = 12;

  LOGS_NORMAL = 13; //Logs supported
  LOGS_OAK    = 14;
